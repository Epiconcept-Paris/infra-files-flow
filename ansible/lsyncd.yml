---

- hosts: localhost
  gather_facts: false

  vars:
    comment: &comment utilisateur SSH pour LAD Test, rsync over ssh
    ssh_key_file: &ssh_key_file .ssh/rsync
    tmpdir: &tmpdir /tmp/keys
    confdir: &confdir /etc/lsyncd
    confdird: &confdird "{{ confdir }}/conf.d"
    users : &users [
      {nom: 'lad_lsyncd_preprod', srv: 'prefnt2.admin2', region: 'GES', basedir: '/space/home/lad_lsyncd_preprod/', sources: [
        '/space/home/lad_test',
        '/space/home/lad_test_mhu',
      ]},
    ]

  tasks:
    - name: nettoyage
      file: 
        path: "{{ tmpdir }}"
        state: absent

    - name: création dossier
      file: 
        path: "{{ tmpdir }}"
        state: directory
      changed_when: false

- hosts: g_source
  gather_facts: false
  
  vars:
    comment: *comment
    ssh_key_file: *ssh_key_file
    tmpdir: *tmpdir
    users : *users
    confdir: *confdir
    confdird: *confdird

  #todo ? https://github.com/guard/listen/wiki/Increasing-the-amount-of-inotify-watchers

  tasks:
    - name: installation paquets
      apt:
        name: lsyncd
        state: present
      become: true

    - name: Creates user on com node ({{ inventory_hostname }})
      user:
        name: "{{ item.nom }}"
        comment: *comment
        generate_ssh_key: True
        ssh_key_file: "{{ ssh_key_file }}"
        ssh_key_comment: "{{ item.nom }}-rsync@{{ inventory_hostname }}"
        home: '/space/home/{{ item.nom }}'
        shell: '/usr/bin/false'
      with_items: "{{ users }}"
      become: true

    - name: Store key on control
      fetch:
        src: '/space/home/{{ item.nom }}/{{ ssh_key_file }}.pub'
        dest: "{{ tmpdir }}/{{ item.nom }}"
        flat: yes
      with_items: "{{ users }}"
      become: true

#gérer la route réseau entre procom1 et prefnt2
#gérer les paths, cf lsyncd.lad_lsyncd_preprod.conf déployé
#source="/space/home/" .. source,
#target="prefnt2.front2:" .. "/space/applisdata/esisdoccu/GES/" .. source,
#filtrer, sync seulement les fichiers non système:wiki

    - file: 
        path: "{{ confdird }}"
        state: directory
        owner: root
        group: root
        mode: '0755'
      with_items: [ confdir, confdird ]
      become: true

    - name: configuration lsyncd pour chaque flux
      template:
        src: lsyncd.item.conf.j2
        dest: "{{ confdird }}/{{ item.nom }}.conf"
        owner: root
        group: root
        mode: '0644'
      with_items: "{{ users }}"
      become: true

    - name: configuration lsyncd centrale
      template:
        src: lsyncd.conf.j2
        dest: "{{ confdir }}/lsyncd.conf.lua"
        owner: root
        group: root
        mode: '0644'
      become: true      

- hosts: g_destination
  gather_facts: false

  vars:
    users : *users
    comment: *comment
    tmpdir: *tmpdir

  tasks:

    - name: Creates user on com node ({{ inventory_hostname }})
      user:
        name: "{{ item.nom }}"
        home: '/space/home/{{ item.nom }}'
        comment: *comment
      #shell: /usr/bin/mysecureshell todo voir si on trouve un truc
      with_items: "{{ users }}"
      become: true

    - name: Sets authorized_key for user on com node ({{ inventory_hostname }})
      authorized_key:
        user: "{{ item.nom }}"
        key: "{{ lookup('file', '{{ tmpdir }}/{{ item.nom }}') }}"
      with_items: "{{ users }}"
      become: true

    #todo: voir si on peut limiter ssh au dossier home du user
    - name: Insert/Update "Match User" configuration block in /etc/ssh/sshd_config
      blockinfile:
        path: /etc/ssh/sshd_config
        block: |
          Match User={{ item.nom }}
            AllowGroups {{ item.nom }}
            PasswordAuthentication no
        marker: "# {mark} ANSIBLE {{ item.nom }}"
      with_items: "{{ users }}"
      become: true
      register: out_confssh

    - name: reload sshd
      service: 
        name: ssh
        state: restarted
      become: true
      when: out_confssh.changed

- hosts: localhost
  gather_facts: false

  vars:
    tmpdir: *tmpdir

  tasks:
    - name: nettoyage
      file: 
        path: "{{ tmpdir }}"
        state: absent
      changed_when: false

- hosts: g_source
  gather_facts: false
  
  vars:
    comment: *comment
    ssh_key_file: *ssh_key_file
    tmpdir: *tmpdir
    users : *users

  tasks:

    # todo lancer le service, et donc setup avant 
    - name: setup service lsyncd
      service:
        name: lsyncd
        enabled: False
        state: restarted
      become: True