#TODO ne créer les users que sur les frontaux de dest prévus (pour l'instant tout user est créé sur tous les frontaux concernés)
#TODO bascule sur groupe www-data non testé en déploiement, correction faite à la main, à re-tester
#TODO s'assurer que le groupe www-data a le droit de rwx sur les dossiers via la conf lsyncd
#BUG on transfère la clef à chaque tour 
#TODO variabiliser les commentaires
#TODO exclure .ssh/
#TODO backup de tout ce qui est déposé, avant transfert (et donc suppression de procom1)
#TODO etcci 

#sources
#https://unix.stackexchange.com/questions/519910/lsyncd-how-to-include-specific-directories-and-exclude-rest-of-all-directories
#https://github.com/axkibe/lsyncd/issues/445
#https://axkibe.github.io/lsyncd/manual/config/layer4/

#todo
#documenter comment le flux marche


---

- hosts: localhost
  gather_facts: false

  vars:
    comment: &comment utilisateur SSH pour LAD Test, rsync over ssh
    ssh_key_file: &ssh_key_file .ssh/rsync
    tmpdir: &tmpdir /tmp/keys
    confdir: &confdir /etc/lsyncd
    confdird: &confdird "{{ confdir }}/conf.d"
    users : &users [
#premier jet de test, preprod
#      {nom: 'lad_lsyncd_preprod', srv: 'prefnt2.admin2', basedir: '/space/home/lad_lsyncd_preprod/', sources: [
#        '/space/home/lad_test',
#        '/space/home/lad_test_mhu',
#      ]},
#temporaire, bug de création des comptes
#      {nom: 'lad_lsyncd_prod', srv: 'profntd1.admin2', basedir: '/space/home/lad_lsyncd_prod/', sources: [
#        '/space/home/LADDOCCU38',
#        '/space/home/LADDOCCU91',
#      ]}
#       {nom: 'TDEP_preprod', srv: 'prefnt2.admin2', basedir: '/space/home/TDEP_preprod/', sources: [
#        '/space/home/TDEP_test/preprod',
#       ]}
       {nom: 'TDEP_recette', srv: 'profntj1.admin2', basedir: '/space/home/TDEP_recette/', sources: [
        '/space/home/TDEP_test/recette',
       ]}

#      {nom: 'infra_lsyncd_test', srv: 'prefnt2.admin2', basedir: '/space/home/infra_lsyncd_test/in/', sources: [
#        '/space/home/infra_lsyncd_test/in/',
#      ]},
#obsolète
#      {nom: 'gedladdoccu_test', srv: 'prefnt2.admin2', basedir: '/space/home/gedladdoccu_test/ged/', sources: [
#        '/space/home/gedladdoccu_test/in/',
#      ]},
    ]

  tasks:
    - name: nettoyage
      file: 
        path: "{{ tmpdir }}"
        state: absent

    - name: création dossier
      file: 
        path: "{{ tmpdir }}"
        state: directory
      changed_when: false

- hosts: g_source
  gather_facts: false
  
  vars:
    comment: *comment
    ssh_key_file: *ssh_key_file
    tmpdir: *tmpdir
    users : *users
    confdir: *confdir
    confdird: *confdird

  #todo ? https://github.com/guard/listen/wiki/Increasing-the-amount-of-inotify-watchers

  tasks:
    - name: installation paquets
      apt:
        name: lsyncd
        state: present
      become: true

    - group:
        name: "{{ item.nom }}"
      loop: "{{ users }}"
      loop_control:
        label: '{{ item.nom }}'
      become: true

    - name: Creates user on com node ({{ inventory_hostname }})
      include_role:
        name: ar-sshflux-user-create
      vars:
        sshuser: "{{ item.nom }}"
        comment: "compte lsyncd"
        home: "/space/home/{{ item.nom }}"
        shell: '/usr/bin/false'
        authorized_key: ''
      loop: "{{ users }}"
      loop_control:
        label: '{{ item.nom }}'

    - name: Store key on control
      fetch:
        src: '/space/home/{{ item.nom }}/{{ ssh_key_file }}.pub'
        dest: "{{ tmpdir }}/{{ item.nom }}"
        flat: yes
      loop: "{{ users }}"
      loop_control:
        label: '{{ item.nom }}'
      become: true

    - file: 
        path: "{{ confdird }}"
        state: directory
        owner: root
        group: root
        mode: '0755'
      with_items: [ confdir, confdird ]
      become: true

    - name: Check for specific lsyncd configuration
      local_action: stat path={{ playbook_dir }}/templates/{{ item.nom }}.conf.j2
      loop: "{{ users }}"
      loop_control:
        label: '{{ item.nom }}'
      register: specificconf

    - name: configuration générique lsyncd pour chaque flux
      template:
        src: lsyncd.item.conf.j2
        dest: "{{ confdird }}/{{ item.nom }}.conf"
        owner: root
        group: root
        mode: '0644'
      loop: "{{ users }}"
      loop_control:
        index_var: idx
        label: '{{ item.nom }}'
      become: true
      when: not specificconf.results[idx].stat.exists

    - name: configuration spécifique lsyncd pour chaque flux
      template:
        src: "{{ item.nom }}.conf.j2"
        dest: "{{ confdird }}/{{ item.nom }}.conf"
        owner: root
        group: root
        mode: '0644'
      loop: "{{ users }}"
      loop_control:
        index_var: idx
        label: '{{ item.nom }}'
      become: true
      when: specificconf.results[idx].stat.exists

    - name: configuration lsyncd centrale
      template:
        src: lsyncd.conf.j2
        dest: "{{ confdir }}/lsyncd.conf.lua"
        owner: root
        group: root
        mode: '0644'
      become: true      

- hosts: g_destination
  gather_facts: false

  vars:
    users : *users
    comment: *comment
    tmpdir: *tmpdir

  tasks:

    - group:
        name: "{{ item.nom }}"
      with_items: "{{ users }}"
      become: true

    - name: Creates user on fnt node ({{ inventory_hostname }})
      user:
        name: "{{ item.nom }}"
        group: www-data
        groups: "{{ item.nom }}"
        home: '/space/home/{{ item.nom }}'
        comment: *comment
      #shell: /usr/bin/mysecureshell todo voir si on trouve un truc
      with_items: "{{ users }}"
      become: true

    - debug: msg="{{ tmpdir }}/{{ item.nom }}"
      with_items: "{{ users }}"

    - name: Sets authorized_key for user on com node ({{ inventory_hostname }})
      authorized_key:
        user: "{{ item.nom }}"
        key: "{{ lookup('file', '{{ tmpdir }}/{{ item.nom }}') }}"
      with_items: "{{ users }}"
      become: true

    #todo: voir si on peut limiter ssh au dossier home du user
    - name: Insert/Update "Match User" configuration block in /etc/ssh/sshd_config
      blockinfile:
        path: /etc/ssh/sshd_config
        block: |
          Match User={{ item.nom }}
            AllowGroups {{ item.nom }}
            PasswordAuthentication no
        marker: "# {mark} ANSIBLE {{ item.nom }}"
      with_items: "{{ users }}"
      become: true
      register: out_confssh

    - name: reload sshd
      service: 
        name: ssh
        state: restarted
      become: true
      when: out_confssh.changed

- hosts: localhost
  gather_facts: false

  vars:
    tmpdir: *tmpdir

  tasks:
    - name: nettoyage
      file: 
        path: "{{ tmpdir }}"
        state: absent
      changed_when: false

- hosts: g_source
  gather_facts: false
  
  vars:
    comment: *comment
    ssh_key_file: *ssh_key_file
    tmpdir: *tmpdir
    users : *users

  tasks:

    # todo lancer le service, et donc setup avant 
    - name: setup service lsyncd
      service:
        name: lsyncd
        enabled: False
        state: restarted
      become: True