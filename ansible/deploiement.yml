---

- hosts: 127.0.0.1
  connection: local
  tags: ['local', 'reconf']
  gather_facts: False

  tasks:
    - name: test des binaires nécessaires
      command: "which {{ item }}"
      changed_when: false
      failed_when: installed.rc not in [0]
      register: installed
      with_items: 
        - jq
        - yaml2json

    - name: test des chemins nécessaires
      stat:
        path: "{{ item }}"
      with_items: 
        - "{{ path_repo_infra_data_misc }}"
        - "{{ path_repo_base }}"
      register: path_exists

    - name: assertion sur les chemins nécessaires
      assert: 
        that: "{{ item.stat.exists }} == true"
        fail_msg: "{{ item.item }} manquant"
        #quiet: yes
      with_items: "{{ path_exists.results }}"

    - name: extraction configuration
      shell: "yaml2json {{ path_repo_infra_data_misc }}/indird.yml | jq .hosts.{{ item }}.confs > {{ tmpconffile }}{{ item }}"
      changed_when: False
      with_items: 
        - procom1
        - profntd1

#TODO: duplication entre items de "extraction configuration" et hosts du playbook suivant (idée, on génère pour tous les serveurs)

- hosts: procom1.admin2 profntd1.admin2
  gather_facts: True

  vars:
    conffile: /etc/indird.conf
    srcdir: "{{ playbook_dir }}/../indird"
    bindir: /usr/local/bin
    systemddir: /etc/systemd/system
    chgscript: { changed: false }
  
  tasks:
    - name: dépot script
      copy: 
        src: "{{ srcdir }}/indird"
        dest: "{{ bindir }}"
        mode: 0755
      become: True
      register: chgscript

    - name: dépot configuration
      tags: ['reconf']
      copy:
        src: "{{ tmpconffile }}{{ ansible_hostname }}"
        dest: "{{ conffile }}"
        mode: 0644
      become: True
      register: chgconf

    - name: dépot services
      copy: 
        src: "{{ srcdir }}/{{ item }}"
        dest: "{{ systemddir }}"
        mode: 0644
      with_items: 
        - 'indird@.service'
        - 'indirdwake@.service'
        - 'indirdwake@.path'
      become: True

    - name: setup service indird
      service:
        name: indird@{}
        enabled: False
        state: stopped
      become: True

    - name: lister les services
      tags: ['reconf']
      shell: "cat {{ conffile }} | jq -r 'keys|.[]'"
      register: services
      changed_when: False

    - name: mode reload
      tags: ['reconf']
      set_fact:
        state: reloaded
      when: chgconf.changed == true or chgscript.changed == true
    - name: mode restart
      tags: ['reconf']
      set_fact:
        state: started
      when: chgconf.changed == false and chgscript.changed == false

    - name: setup services indird@service
      tags: ['reconf']
      service:
        name: "indird@{{ item }}"
        enabled: False
        state: "{{ state }}"
      with_items: "{{ services.stdout_lines }}"
      become: True